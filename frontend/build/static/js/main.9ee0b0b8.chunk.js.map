{"version":3,"sources":["constants/userConstants.js","constants/bloodStoreConstants.js","constants/bloodRequestConstants.js","constants/bloodIssueConstants.js","constants/commentConstants.js","store.js","reducers/userReducers.js","reducers/bloodStoreReducers.js","reducers/bloodRequestReducers.js","reducers/bloodIssueReducers.js","reducers/commentReducers.js","components/Footer.js","actions/userActions.js","components/Header.js","actions/bloodStoreActions.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/ProfileScreen.js","components/Confirm.js","screens/UserListScreen.js","screens/BloodStoreScreen.js","actions/bloodRequestActions.js","screens/BloodRequestScreen.js","components/NotFound.js","screens/LogHistoryScreen.js","components/routes/PrivateRoute.js","components/routes/AdminPrivateRoute.js","screens/BloodIssueScreen.js","actions/bloodIssueActions.js","screens/CommentScreen.js","actions/commentActions.js","screens/ReportScreen.js","screens/RegisterScreen.js","components/routes/Routes.js","App.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_LOG_HISTORY_REQUEST","USER_LOG_HISTORY_SUCCESS","USER_LOG_HISTORY_FAIL","CLEAR_ALERTS","BLOOD_STORE_REQUEST","BLOOD_STORE_SUCCESS","BLOOD_STORE_FAIL","BLOOD_STORE_RESET","BLOOD_STORE_CREATE_REQUEST","BLOOD_STORE_CREATE_SUCCESS","BLOOD_STORE_CREATE_FAIL","BLOOD_STORE_CREATE_RESET","BLOOD_STORE_UPDATE_REQUEST","BLOOD_STORE_UPDATE_SUCCESS","BLOOD_STORE_UPDATE_FAIL","BLOOD_STORE_UPDATE_RESET","BLOOD_STORE_DELETE_REQUEST","BLOOD_STORE_DELETE_SUCCESS","BLOOD_STORE_DELETE_FAIL","BLOOD_REQUEST_REQUEST","BLOOD_REQUEST_SUCCESS","BLOOD_REQUEST_FAIL","BLOOD_REQUEST_RESET","BLOOD_REQUEST_CREATE_REQUEST","BLOOD_REQUEST_CREATE_SUCCESS","BLOOD_REQUEST_CREATE_FAIL","BLOOD_REQUEST_CREATE_RESET","BLOOD_REQUEST_UPDATE_REQUEST","BLOOD_REQUEST_UPDATE_SUCCESS","BLOOD_REQUEST_UPDATE_FAIL","BLOOD_REQUEST_UPDATE_RESET","BLOOD_REQUEST_DELETE_REQUEST","BLOOD_REQUEST_DELETE_SUCCESS","BLOOD_REQUEST_DELETE_FAIL","BLOOD_ISSUE_REQUEST","BLOOD_ISSUE_SUCCESS","BLOOD_ISSUE_FAIL","BLOOD_ISSUE_RESET","BLOOD_ISSUE_CREATE_REQUEST","BLOOD_ISSUE_CREATE_SUCCESS","BLOOD_ISSUE_CREATE_FAIL","BLOOD_ISSUE_CREATE_RESET","BLOOD_ISSUE_DELETE_REQUEST","BLOOD_ISSUE_DELETE_SUCCESS","BLOOD_ISSUE_DELETE_FAIL","COMMENT_REQUEST","COMMENT_SUCCESS","COMMENT_FAIL","COMMENT_RESET","COMMENT_CREATE_REQUEST","COMMENT_CREATE_SUCCESS","COMMENT_CREATE_FAIL","COMMENT_CREATE_RESET","COMMENT_UPDATE_REQUEST","COMMENT_UPDATE_SUCCESS","COMMENT_UPDATE_FAIL","COMMENT_UPDATE_RESET","COMMENT_DELETE_REQUEST","COMMENT_DELETE_SUCCESS","COMMENT_DELETE_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","success","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","userLogHistory","logHistory","bloodStoreList","bloodStores","bloodStoreCreate","bloodStoreUpdate","bloodStoreDelete","bloodRequestList","bloodRequests","bloodRequestCreate","bloodRequestUpdate","bloodRequestDelete","bloodIssueList","bloodIssues","bloodIssueCreate","bloodIssueDelete","commentList","comments","commentCreate","commentUpdate","commentDelete","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","className","register","name","email","password","dispatch","a","config","headers","axios","post","response","data","message","Header","useDispatch","useSelector","authLinks","to","id","role","data-bs-toggle","aria-expanded","aria-labelledby","onClick","removeItem","isAdmin","guestLinks","data-bs-target","aria-controls","aria-label","listBloodStore","get","Message","variant","children","useState","alert","setAlert","useEffect","timeId","setTimeout","clearTimeout","defaultPros","Loader","style","width","height","margin","display","HomeScreen","filteredBloodStore","e","filter","active","blood_component","blood_group","length","FormContainer","LoginScreen","history","setEmail","setPassword","push","onSubmit","preventDefault","setItem","stringify","login","htmlFor","placeholder","value","onChange","target","ProfileScreen","setName","confirmPassword","setConfirmPassword","setMessage","getState","Authorization","token","put","updateUserProfile","_id","required","Confirm","customUI","onClose","UserListScreen","match","setId","setIsAdmin","edit","setEdit","successDelete","errorDelete","loadingCreateRegister","errorCreateRegister","successCreateRegister","loadingUpdate","errorUpdate","successUpdate","formCleanHandler","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalItems","Math","ceil","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-hidden","data-bs-dismiss","label","checked","map","href","color","editHandler","previousLabel","previousClassName","previousLinkClassName","nextLabel","nextClassName","nextLinkClassName","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","breakLabel","breakClassName","breakLinkClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","initialValues","donor","hb","unit","bag","BloodStoreScreen","values","setValues","errorCreate","loadingCreate","successCreate","loadingDelete","deleteHandler","confirmAlert","delete","deleteBloodStore","handleChange","filteredItems","blood","createBloodStore","disabled","format","moment","createdAt","listBloodRequest","patient_id","patient_name","platelet","plasma","rbc","wb","BloodRequestScreen","deleteBloodRequest","createBloodRequest","NotFound","UserLogHistoryScreen","log","logDate","PrivateRoute","Component","component","rest","render","props","AdminPrivateRoute","patient","BloodIssueScreen","bloodRequestId","params","loadingBloodRequestList","successCreateRequest","loadingBloodStoreList","window","confirm","deleteBloodIssue","b","CommentScreen","comment","setComment","deleteComment","updateComment","createComment","commentedBy","commentApprovedBy","ReportScreen","from","setFrom","setTo","handleSubmit","RegisterScreen","location","Routes","path","exact","App","addEventListener","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9ee0b0b8.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\nexport const USER_LOG_HISTORY_REQUEST = 'USER_LOG_HISTORY_REQUEST'\nexport const USER_LOG_HISTORY_SUCCESS = 'USER_LOG_HISTORY_SUCCESS'\nexport const USER_LOG_HISTORY_FAIL = 'USER_LOG_HISTORY_FAIL'\n\nexport const CLEAR_ALERTS = 'CLEAR_ALERTS'\n","export const BLOOD_STORE_REQUEST = 'BLOOD_STORE_REQUEST'\nexport const BLOOD_STORE_SUCCESS = 'BLOOD_STORE_SUCCESS'\nexport const BLOOD_STORE_FAIL = 'BLOOD_STORE_FAIL'\nexport const BLOOD_STORE_RESET = 'BLOOD_STORE_RESET'\n\nexport const BLOOD_STORE_CREATE_REQUEST = 'BLOOD_STORE_CREATE_REQUEST'\nexport const BLOOD_STORE_CREATE_SUCCESS = 'BLOOD_STORE_CREATE_SUCCESS'\nexport const BLOOD_STORE_CREATE_FAIL = 'BLOOD_STORE_CREATE_FAIL'\nexport const BLOOD_STORE_CREATE_RESET = 'BLOOD_STORE_CREATE_RESET'\n\nexport const BLOOD_STORE_UPDATE_REQUEST = 'BLOOD_STORE_UPDATE_REQUEST'\nexport const BLOOD_STORE_UPDATE_SUCCESS = 'BLOOD_STORE_UPDATE_SUCCESS'\nexport const BLOOD_STORE_UPDATE_FAIL = 'BLOOD_STORE_UPDATE_FAIL'\nexport const BLOOD_STORE_UPDATE_RESET = 'BLOOD_STORE_UPDATE_RESET'\n\nexport const BLOOD_STORE_DELETE_REQUEST = 'BLOOD_STORE_DELETE_REQUEST'\nexport const BLOOD_STORE_DELETE_SUCCESS = 'BLOOD_STORE_DELETE_SUCCESS'\nexport const BLOOD_STORE_DELETE_FAIL = 'BLOOD_STORE_DELETE_FAIL'\nexport const BLOOD_STORE_DELETE_RESET = 'BLOOD_STORE_DELETE_RESET'\n","export const BLOOD_REQUEST_REQUEST = 'BLOOD_REQUEST_REQUEST'\nexport const BLOOD_REQUEST_SUCCESS = 'BLOOD_REQUEST_SUCCESS'\nexport const BLOOD_REQUEST_FAIL = 'BLOOD_REQUEST_FAIL'\nexport const BLOOD_REQUEST_RESET = 'BLOOD_REQUEST_RESET'\n\nexport const BLOOD_REQUEST_CREATE_REQUEST = 'BLOOD_REQUEST_CREATE_REQUEST'\nexport const BLOOD_REQUEST_CREATE_SUCCESS = 'BLOOD_REQUEST_CREATE_SUCCESS'\nexport const BLOOD_REQUEST_CREATE_FAIL = 'BLOOD_REQUEST_CREATE_FAIL'\nexport const BLOOD_REQUEST_CREATE_RESET = 'BLOOD_REQUEST_CREATE_RESET'\n\nexport const BLOOD_REQUEST_UPDATE_REQUEST = 'BLOOD_REQUEST_UPDATE_REQUEST'\nexport const BLOOD_REQUEST_UPDATE_SUCCESS = 'BLOOD_REQUEST_UPDATE_SUCCESS'\nexport const BLOOD_REQUEST_UPDATE_FAIL = 'BLOOD_REQUEST_UPDATE_FAIL'\nexport const BLOOD_REQUEST_UPDATE_RESET = 'BLOOD_REQUEST_UPDATE_RESET'\n\nexport const BLOOD_REQUEST_DELETE_REQUEST = 'BLOOD_REQUEST_DELETE_REQUEST'\nexport const BLOOD_REQUEST_DELETE_SUCCESS = 'BLOOD_REQUEST_DELETE_SUCCESS'\nexport const BLOOD_REQUEST_DELETE_FAIL = 'BLOOD_REQUEST_DELETE_FAIL'\nexport const BLOOD_REQUEST_DELETE_RESET = 'BLOOD_REQUEST_DELETE_RESET'\n","export const BLOOD_ISSUE_REQUEST = 'BLOOD_ISSUE_REQUEST'\nexport const BLOOD_ISSUE_SUCCESS = 'BLOOD_ISSUE_SUCCESS'\nexport const BLOOD_ISSUE_FAIL = 'BLOOD_ISSUE_FAIL'\nexport const BLOOD_ISSUE_RESET = 'BLOOD_ISSUE_RESET'\n\nexport const BLOOD_ISSUE_CREATE_REQUEST = 'BLOOD_ISSUE_CREATE_REQUEST'\nexport const BLOOD_ISSUE_CREATE_SUCCESS = 'BLOOD_ISSUE_CREATE_SUCCESS'\nexport const BLOOD_ISSUE_CREATE_FAIL = 'BLOOD_ISSUE_CREATE_FAIL'\nexport const BLOOD_ISSUE_CREATE_RESET = 'BLOOD_ISSUE_CREATE_RESET'\n\nexport const BLOOD_ISSUE_DELETE_REQUEST = 'BLOOD_ISSUE_DELETE_REQUEST'\nexport const BLOOD_ISSUE_DELETE_SUCCESS = 'BLOOD_ISSUE_DELETE_SUCCESS'\nexport const BLOOD_ISSUE_DELETE_FAIL = 'BLOOD_ISSUE_DELETE_FAIL'\nexport const BLOOD_ISSUE_DELETE_RESET = 'BLOOD_ISSUE_DELETE_RESET'\n","export const COMMENT_REQUEST = 'COMMENT_REQUEST'\nexport const COMMENT_SUCCESS = 'COMMENT_SUCCESS'\nexport const COMMENT_FAIL = 'COMMENT_FAIL'\nexport const COMMENT_RESET = 'COMMENT_RESET'\n\nexport const COMMENT_CREATE_REQUEST = 'COMMENT_CREATE_REQUEST'\nexport const COMMENT_CREATE_SUCCESS = 'COMMENT_CREATE_SUCCESS'\nexport const COMMENT_CREATE_FAIL = 'COMMENT_CREATE_FAIL'\nexport const COMMENT_CREATE_RESET = 'COMMENT_CREATE_RESET'\n\nexport const COMMENT_UPDATE_REQUEST = 'COMMENT_UPDATE_REQUEST'\nexport const COMMENT_UPDATE_SUCCESS = 'COMMENT_UPDATE_SUCCESS'\nexport const COMMENT_UPDATE_FAIL = 'COMMENT_UPDATE_FAIL'\nexport const COMMENT_UPDATE_RESET = 'COMMENT_UPDATE_RESET'\n\nexport const COMMENT_DELETE_REQUEST = 'COMMENT_DELETE_REQUEST'\nexport const COMMENT_DELETE_SUCCESS = 'COMMENT_DELETE_SUCCESS'\nexport const COMMENT_DELETE_FAIL = 'COMMENT_DELETE_FAIL'\nexport const COMMENT_DELETE_RESET = 'COMMENT_DELETE_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n  userLogHistoryReducer,\n} from './reducers/userReducers'\nimport {\n  bloodStoreCreateReducer,\n  bloodStoreDeleteReducer,\n  bloodStoreListReducer,\n  bloodStoreUpdateReducer,\n} from './reducers/bloodStoreReducers'\n\nimport {\n  bloodRequestCreateReducer,\n  bloodRequestDeleteReducer,\n  bloodRequestListReducer,\n  bloodRequestUpdateReducer,\n} from './reducers/bloodRequestReducers'\n\nimport {\n  bloodIssueCreateReducer,\n  bloodIssueDeleteReducer,\n  bloodIssueListReducer,\n} from './reducers/bloodIssueReducers'\n\nimport {\n  commentCreateReducer,\n  commentDeleteReducer,\n  commentListReducer,\n  commentUpdateReducer,\n} from './reducers/commentReducers'\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userLogHistory: userLogHistoryReducer,\n\n  bloodStoreList: bloodStoreListReducer,\n  bloodStoreCreate: bloodStoreCreateReducer,\n  bloodStoreUpdate: bloodStoreUpdateReducer,\n  bloodStoreDelete: bloodStoreDeleteReducer,\n\n  bloodRequestList: bloodRequestListReducer,\n  bloodRequestCreate: bloodRequestCreateReducer,\n  bloodRequestUpdate: bloodRequestUpdateReducer,\n  bloodRequestDelete: bloodRequestDeleteReducer,\n\n  bloodIssueList: bloodIssueListReducer,\n  bloodIssueCreate: bloodIssueCreateReducer,\n  bloodIssueDelete: bloodIssueDeleteReducer,\n\n  commentList: commentListReducer,\n  commentCreate: commentCreateReducer,\n  commentUpdate: commentUpdateReducer,\n  commentDelete: commentDeleteReducer,\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n}\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_LOG_HISTORY_FAIL,\n  USER_LOG_HISTORY_REQUEST,\n  USER_LOG_HISTORY_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_RESET,\n  USER_UPDATE_SUCCESS,\n  CLEAR_ALERTS,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        loading: true,\n      }\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload,\n      }\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userLogHistoryReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOG_HISTORY_REQUEST:\n      return {\n        loading: true,\n      }\n    case USER_LOG_HISTORY_SUCCESS:\n      return {\n        loading: false,\n        logHistory: action.payload,\n      }\n    case USER_LOG_HISTORY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return {\n        loading: true,\n      }\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case USER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload,\n      }\n    case USER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case USER_DETAILS_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return {\n        loading: true,\n      }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        userInfo: action.payload,\n      }\n    case USER_UPDATE_PROFILE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case USER_LIST_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload,\n      }\n    case USER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case USER_LIST_RESET:\n      return {\n        users: [],\n      }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return {\n        loading: true,\n      }\n    case USER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case USER_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case USER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case USER_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  BLOOD_STORE_REQUEST,\n  BLOOD_STORE_SUCCESS,\n  BLOOD_STORE_FAIL,\n  BLOOD_STORE_RESET,\n  BLOOD_STORE_CREATE_REQUEST,\n  BLOOD_STORE_CREATE_SUCCESS,\n  BLOOD_STORE_CREATE_FAIL,\n  BLOOD_STORE_CREATE_RESET,\n  BLOOD_STORE_UPDATE_REQUEST,\n  BLOOD_STORE_UPDATE_SUCCESS,\n  BLOOD_STORE_UPDATE_FAIL,\n  BLOOD_STORE_UPDATE_RESET,\n  BLOOD_STORE_DELETE_REQUEST,\n  BLOOD_STORE_DELETE_SUCCESS,\n  BLOOD_STORE_DELETE_FAIL,\n} from '../constants/bloodStoreConstants'\nimport { CLEAR_ALERTS } from '../constants/userConstants'\n\nexport const bloodStoreListReducer = (state = { bloodStores: [] }, action) => {\n  switch (action.type) {\n    case BLOOD_STORE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_STORE_SUCCESS:\n      return {\n        loading: false,\n        bloodStores: action.payload,\n      }\n    case BLOOD_STORE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_STORE_RESET:\n      return {\n        bloodStores: [],\n      }\n    default:\n      return state\n  }\n}\n\nexport const bloodStoreCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_STORE_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_STORE_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        bloodStores: action.payload,\n      }\n    case BLOOD_STORE_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_STORE_CREATE_RESET:\n      return {}\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const bloodStoreUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_STORE_UPDATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_STORE_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case BLOOD_STORE_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_STORE_UPDATE_RESET:\n      return {}\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const bloodStoreDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_STORE_DELETE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_STORE_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case BLOOD_STORE_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n","import {\n  BLOOD_REQUEST_REQUEST,\n  BLOOD_REQUEST_SUCCESS,\n  BLOOD_REQUEST_FAIL,\n  BLOOD_REQUEST_RESET,\n  BLOOD_REQUEST_CREATE_REQUEST,\n  BLOOD_REQUEST_CREATE_SUCCESS,\n  BLOOD_REQUEST_CREATE_FAIL,\n  BLOOD_REQUEST_CREATE_RESET,\n  BLOOD_REQUEST_UPDATE_REQUEST,\n  BLOOD_REQUEST_UPDATE_SUCCESS,\n  BLOOD_REQUEST_UPDATE_FAIL,\n  BLOOD_REQUEST_UPDATE_RESET,\n  BLOOD_REQUEST_DELETE_REQUEST,\n  BLOOD_REQUEST_DELETE_SUCCESS,\n  BLOOD_REQUEST_DELETE_FAIL,\n} from '../constants/bloodRequestConstants'\nimport { CLEAR_ALERTS } from '../constants/userConstants'\n\nexport const bloodRequestListReducer = (\n  state = { bloodRequests: [] },\n  action\n) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_REQUEST_SUCCESS:\n      return {\n        loading: false,\n        bloodRequests: action.payload,\n      }\n    case BLOOD_REQUEST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_REQUEST_RESET:\n      return {\n        bloodRequests: [],\n      }\n    default:\n      return state\n  }\n}\n\nexport const bloodRequestCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_REQUEST_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        bloodRequests: action.payload,\n      }\n    case BLOOD_REQUEST_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_REQUEST_CREATE_RESET:\n      return {}\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const bloodRequestUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_UPDATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_REQUEST_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case BLOOD_REQUEST_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_REQUEST_UPDATE_RESET:\n      return {}\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const bloodRequestDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_DELETE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_REQUEST_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case BLOOD_REQUEST_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n","import {\n  BLOOD_ISSUE_REQUEST,\n  BLOOD_ISSUE_SUCCESS,\n  BLOOD_ISSUE_FAIL,\n  BLOOD_ISSUE_RESET,\n  BLOOD_ISSUE_CREATE_REQUEST,\n  BLOOD_ISSUE_CREATE_SUCCESS,\n  BLOOD_ISSUE_CREATE_FAIL,\n  BLOOD_ISSUE_CREATE_RESET,\n  BLOOD_ISSUE_DELETE_REQUEST,\n  BLOOD_ISSUE_DELETE_SUCCESS,\n  BLOOD_ISSUE_DELETE_FAIL,\n} from '../constants/bloodIssueConstants'\nimport { CLEAR_ALERTS } from '../constants/userConstants'\n\nexport const bloodIssueListReducer = (state = { bloodIssues: [] }, action) => {\n  switch (action.type) {\n    case BLOOD_ISSUE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_ISSUE_SUCCESS:\n      return {\n        loading: false,\n        bloodIssues: action.payload,\n      }\n    case BLOOD_ISSUE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_ISSUE_RESET:\n      return {\n        bloodIssues: [],\n      }\n    default:\n      return state\n  }\n}\n\nexport const bloodIssueCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_ISSUE_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_ISSUE_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        bloodIssues: action.payload,\n      }\n    case BLOOD_ISSUE_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_ISSUE_CREATE_RESET:\n      return {}\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const bloodIssueDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_ISSUE_DELETE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_ISSUE_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case BLOOD_ISSUE_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n","import {\n  COMMENT_REQUEST,\n  COMMENT_SUCCESS,\n  COMMENT_FAIL,\n  COMMENT_RESET,\n  COMMENT_CREATE_REQUEST,\n  COMMENT_CREATE_SUCCESS,\n  COMMENT_CREATE_FAIL,\n  COMMENT_CREATE_RESET,\n  COMMENT_UPDATE_REQUEST,\n  COMMENT_UPDATE_SUCCESS,\n  COMMENT_UPDATE_FAIL,\n  COMMENT_UPDATE_RESET,\n  COMMENT_DELETE_REQUEST,\n  COMMENT_DELETE_SUCCESS,\n  COMMENT_DELETE_FAIL,\n} from '../constants/commentConstants'\nimport { CLEAR_ALERTS } from '../constants/userConstants'\n\nexport const commentListReducer = (state = { comments: [] }, action) => {\n  switch (action.type) {\n    case COMMENT_REQUEST:\n      return {\n        loading: true,\n      }\n    case COMMENT_SUCCESS:\n      return {\n        loading: false,\n        comments: action.payload,\n      }\n    case COMMENT_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case COMMENT_RESET:\n      return {\n        comments: [],\n      }\n    default:\n      return state\n  }\n}\n\nexport const commentCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case COMMENT_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case COMMENT_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        comments: action.payload,\n      }\n    case COMMENT_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case COMMENT_CREATE_RESET:\n      return {}\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const commentUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case COMMENT_UPDATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case COMMENT_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case COMMENT_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case COMMENT_UPDATE_RESET:\n      return {}\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const commentDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case COMMENT_DELETE_REQUEST:\n      return {\n        loading: true,\n      }\n    case COMMENT_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case COMMENT_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className='container'>\n        <div className='row'>\n          <div className='col text-center py-3'>Copyright &copy; 2023</div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_LOG_HISTORY_REQUEST,\n  USER_LOG_HISTORY_SUCCESS,\n  USER_LOG_HISTORY_FAIL,\n} from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST })\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n    }\n\n    const { data } = await axios.post(\n      `https://mernbloodbank.onrender.com/api/users/login`,\n      { email, password },\n      config\n    )\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getLogHistory = () => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOG_HISTORY_REQUEST })\n\n    const { data } = await axios.get(`https://mernbloodbank.onrender.com/api/users/log`)\n\n    dispatch({ type: USER_LOG_HISTORY_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_LOG_HISTORY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST })\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n    }\n\n    await axios.post(`https://mernbloodbank.onrender.com/api/users`, { name, email, password }, config)\n\n    dispatch({ type: USER_REGISTER_SUCCESS })\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://mernbloodbank.onrender.com/api/users/${id}`, config)\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`https://mernbloodbank.onrender.com/api/users/profile`, user, config)\n\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data })\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LIST_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://mernbloodbank.onrender.com/api/users`, config)\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://mernbloodbank.onrender.com/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`https://mernbloodbank.onrender.com/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  const authLinks = (\n    <ul className='navbar-nav mr-right mb-2 mb-lg-0'>\n      <li className='nav-item'>\n        <Link to='/comment' className='nav-link'>\n          Comment\n        </Link>\n      </li>\n      <li className='nav-item'>\n        <Link to='/blood-request' className='nav-link'>\n          Blood Request\n        </Link>\n      </li>\n      <li className='nav-item'>\n        <Link to='/blood-store' className='nav-link'>\n          Blood Store\n        </Link>\n      </li>\n\n      <li className='nav-item dropdown'>\n        <span\n          className='nav-link dropdown-toggle'\n          id='navbarDropdown'\n          role='button'\n          data-bs-toggle='dropdown'\n          aria-expanded='false'\n        >\n          {userInfo && userInfo.name}\n        </span>\n        <ul className='dropdown-menu' aria-labelledby='navbarDropdown'>\n          <li>\n            <Link to='/profile' className='dropdown-item'>\n              Profile\n            </Link>\n          </li>\n          <li>\n            <Link to='/' onClick={logoutHandler} className='dropdown-item'>\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </li>\n\n      {userInfo && userInfo.isAdmin && (\n        <li className='nav-item dropdown'>\n          <span\n            className='nav-link dropdown-toggle'\n            id='navbarDropdown'\n            role='button'\n            data-bs-toggle='dropdown'\n            aria-expanded='false'\n          >\n            Admin\n          </span>\n          <ul className='dropdown-menu' aria-labelledby='navbarDropdown'>\n            <li>\n              <Link to='/admin/users' className='dropdown-item'>\n                Users\n              </Link>\n            </li>\n            <li>\n              <Link to='/admin/users/logs' className='dropdown-item'>\n                Users Log\n              </Link>\n            </li>\n            <li>\n              <Link to='/admin/report' className='dropdown-item'>\n                Report\n              </Link>\n            </li>\n          </ul>\n        </li>\n      )}\n    </ul>\n  )\n\n  const guestLinks = (\n    <ul className='navbar-nav mr-right mb-2 mb-lg-0'>\n      {/* <li className='nav-item'>\n        <Link to='/register' className='nav-link'>\n          Register\n        </Link>\n      </li> */}\n      <li className='nav-item'>\n        <Link to='/login' className='nav-link'>\n          Login\n        </Link>\n      </li>\n    </ul>\n  )\n\n  return (\n    <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\n      <div className='container'>\n        <Link className='navbar-brand' to='/'>\n          LIFESOURCE BLOOD BANK\n        </Link>\n        <button\n          className='navbar-toggler'\n          type='button'\n          data-bs-toggle='collapse'\n          data-bs-target='#navbarSupportedContent'\n          aria-controls='navbarSupportedContent'\n          aria-expanded='false'\n          aria-label='Toggle navigation'\n        >\n          <span className='navbar-toggler-icon'></span>\n        </button>\n        <div className='collapse navbar-collapse' id='navbarSupportedContent'>\n          <ul className='navbar-nav mr-auto mb-2 mb-lg-0'></ul>\n          {userInfo ? authLinks : guestLinks}\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Header\n","import axios from 'axios'\nimport {\n  BLOOD_STORE_REQUEST,\n  BLOOD_STORE_SUCCESS,\n  BLOOD_STORE_FAIL,\n  BLOOD_STORE_CREATE_FAIL,\n  BLOOD_STORE_CREATE_REQUEST,\n  BLOOD_STORE_CREATE_SUCCESS,\n  BLOOD_STORE_UPDATE_FAIL,\n  BLOOD_STORE_UPDATE_SUCCESS,\n  BLOOD_STORE_UPDATE_REQUEST,\n  BLOOD_STORE_DELETE_REQUEST,\n  BLOOD_STORE_DELETE_SUCCESS,\n  BLOOD_STORE_DELETE_FAIL,\n} from '../constants/bloodStoreConstants'\n\nexport const listBloodStore = () => async (dispatch) => {\n  try {\n    dispatch({ type: BLOOD_STORE_REQUEST })\n\n    const { data } = await axios.get(`https://mernbloodbank.onrender.com/api/blood-store`)\n\n    dispatch({\n      type: BLOOD_STORE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_STORE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const createBloodStore = (blood) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BLOOD_STORE_CREATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://mernbloodbank.onrender.com/api/blood-store`, blood, config)\n\n    dispatch({\n      type: BLOOD_STORE_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_STORE_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateBloodStore = (blood) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BLOOD_STORE_UPDATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.put(`https://mernbloodbank.onrender.com/api/blood-store/${blood._id}`, blood, config)\n\n    dispatch({\n      type: BLOOD_STORE_UPDATE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_STORE_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteBloodStore = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BLOOD_STORE_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://mernbloodbank.onrender.com/api/blood-store/${id}`, config)\n\n    dispatch({\n      type: BLOOD_STORE_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_STORE_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { CLEAR_ALERTS } from '../constants/userConstants'\n\nconst Message = ({ variant, children }) => {\n  const [alert, setAlert] = useState(true)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const timeId = setTimeout(() => {\n      setAlert(false)\n      dispatch({ type: CLEAR_ALERTS })\n    }, 4000)\n\n    return () => {\n      clearTimeout(timeId)\n    }\n  }, [])\n\n  return alert && <div className={`alert alert-${variant}`}>{children}</div>\n}\n\nMessage.defaultPros = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <div className='text-light text-center mx-auto'>\n      <span\n        className='spinner-border'\n        style={{\n          width: '200px',\n          height: '200px',\n          margin: 'auto',\n          display: 'block',\n        }}\n      ></span>\n      <span className='sr-only'>Loading...</span>\n    </div>\n  )\n}\n\nexport default Loader\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listBloodStore } from '../actions/bloodStoreActions'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch()\n  const bloodStoreList = useSelector((state) => state.bloodStoreList)\n  const { bloodStores, error, loading } = bloodStoreList\n\n  useEffect(() => {\n    dispatch(listBloodStore())\n  }, [dispatch])\n\n  const filteredBloodStore = (e) =>\n    bloodStores &&\n    bloodStores.filter(\n      ({ active, blood_component, blood_group }) =>\n        active === e.active &&\n        blood_component === e.blood_component &&\n        blood_group === e.blood_group\n    )\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <div className=''>\n          <div className='row mt-3'>\n            <h3 className='text-center summary'>CURRENT SUMMARY BLOOD STORE</h3>\n            <div className='col-lg-3 col-md-6 col-sm-6 col-12'>\n              <div className='card text-center'>\n                <div className='card-header'>Plasma</div>\n                <div className='card-body '>\n                  <ul className='list-group list-group-flush'>\n                    <li className='list-group-item'>\n                      <strong>A + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Plasma',\n                            blood_group: 'A+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Plasma',\n                            blood_group: 'B+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Plasma',\n                            blood_group: 'AB+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Plasma',\n                            blood_group: 'O+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>A - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Plasma',\n                            blood_group: 'A-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Plasma',\n                            blood_group: 'B-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Plasma',\n                            blood_group: 'AB-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Plasma',\n                            blood_group: 'O-',\n                          }).length}\n                      </strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className='card-footer text-muted'>Today</div>\n              </div>\n            </div>\n\n            <div className='col-lg-3 col-md-6 col-sm-6 col-12'>\n              <div className='card text-center'>\n                <div className='card-header'>Platelet</div>\n                <div className='card-body '>\n                  <ul className='list-group list-group-flush'>\n                    <li className='list-group-item'>\n                      <strong>A + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Platelet',\n                            blood_group: 'A+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Platelet',\n                            blood_group: 'B+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Platelet',\n                            blood_group: 'AB+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Platelet',\n                            blood_group: 'O+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>A - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Platelet',\n                            blood_group: 'A-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Platelet',\n                            blood_group: 'B-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Platelet',\n                            blood_group: 'AB-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Platelet',\n                            blood_group: 'O-',\n                          }).length}\n                      </strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className='card-footer text-muted'>Today</div>\n              </div>\n            </div>\n\n            <div className='col-lg-3 col-md-6 col-sm-6 col-12'>\n              <div className='card text-center'>\n                <div className='card-header'>RBC</div>\n                <div className='card-body '>\n                  <ul className='list-group list-group-flush'>\n                    <li className='list-group-item'>\n                      <strong>A + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'RBC',\n                            blood_group: 'A+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'RBC',\n                            blood_group: 'B+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'RBC',\n                            blood_group: 'AB+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'RBC',\n                            blood_group: 'O+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>A - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'RBC',\n                            blood_group: 'A-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'RBC',\n                            blood_group: 'B-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'RBC',\n                            blood_group: 'AB-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'RBC',\n                            blood_group: 'O-',\n                          }).length}\n                      </strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className='card-footer text-muted'>Today</div>\n              </div>\n            </div>\n\n            <div className='col-lg-3 col-md-6 col-sm-6 col-12'>\n              <div className='card text-center'>\n                <div className='card-header'>Whole Blood</div>\n                <div className='card-body '>\n                  <ul className='list-group list-group-flush'>\n                    <li className='list-group-item'>\n                      <strong>A + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Whole Blood',\n                            blood_group: 'A+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Whole Blood',\n                            blood_group: 'B+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Whole Blood',\n                            blood_group: 'AB+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Whole Blood',\n                            blood_group: 'O+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>A - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Whole Blood',\n                            blood_group: 'A-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Whole Blood',\n                            blood_group: 'B-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Whole Blood',\n                            blood_group: 'AB-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            active: true,\n                            blood_component: 'Whole Blood',\n                            blood_group: 'O-',\n                          }).length}\n                      </strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className='card-footer text-muted'>Today</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React from 'react'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <div className='container'>\n      <div className='row justify-content-md-center'>\n        <div className='col-12 col-md-6'>{children}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default FormContainer\n","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { login } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst LoginScreen = ({ history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  useEffect(() => {\n    userInfo && history.push('/')\n  }, [history, userInfo])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader></Loader>}\n\n      <form onSubmit={submitHandler}>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Address</label>\n          <input\n            type='email'\n            className='form-control'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            placeholder='Enter password'\n            className='form-control'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Sign In\n        </button>\n      </form>\n\n      <div className='row py-3'>\n        <div className='col'>\n          New Customer?\n          <Link to='/register'> Register</Link>\n        </div>\n      </div>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('')\n\n  const dispatch = useDispatch()\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  useEffect(() => {\n    if (!user.name) {\n      dispatch(getUserDetails('profile'))\n    } else {\n      setName(user.name)\n      setEmail(user.email)\n    }\n  }, [dispatch, history, user])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Password do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n  return (\n    <FormContainer>\n      <h2>User Profile</h2>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {success && <Message variant='success'>Profile Updated </Message>}\n      {loading && <Loader></Loader>}\n      <form onSubmit={submitHandler}>\n        <div className='form-group'>\n          <label htmlFor='name'>Name</label>\n          <input\n            type='text'\n            placeholder='Enter name'\n            className='form-control'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Address</label>\n          <input\n            type='email'\n            placeholder='Enter email'\n            className='form-control'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            placeholder='Enter password'\n            className='form-control'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='confirmPassword'>Confirm Password</label>\n          <input\n            type='password'\n            placeholder='Confirm password'\n            className='form-control'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Update\n        </button>\n      </form>\n    </FormContainer>\n  )\n}\n\nexport default ProfileScreen\n","import 'react-confirm-alert/src/react-confirm-alert.css'\n\nexport const Confirm = (action) => {\n  return {\n    customUI: ({ onClose }) => {\n      return (\n        <div className='px-5 py-3 shadow-lg text-center'>\n          <h1>Are you sure?</h1>\n          <p>You want to delete this?</p>\n          <div className='btn-group d-flex justify-content-between'>\n            <button className='btn btn-outline-dark bg-sm' onClick={onClose}>\n              No\n            </button>\n            <button\n              className='btn btn-outline-danger bg-sm ml-1'\n              onClick={() => {\n                action()\n                onClose()\n              }}\n            >\n              <i className='fa fa-trash'></i> Yes, Delete it!\n            </button>\n          </div>\n        </div>\n      )\n    },\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  listUsers,\n  deleteUser,\n  updateUser,\n  register,\n} from '../actions/userActions'\nimport ReactPaginate from 'react-paginate'\n\nimport { confirmAlert } from 'react-confirm-alert'\nimport { Confirm } from '../components/Confirm'\n\nconst UserListScreen = ({ match }) => {\n  const [id, setId] = useState(null)\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [message, setMessage] = useState('')\n  const [edit, setEdit] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete, error: errorDelete } = userDelete\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const {\n    loading: loadingCreateRegister,\n    error: errorCreateRegister,\n    success: successCreateRegister,\n  } = userRegister\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  const formCleanHandler = () => {\n    setName('')\n    setEmail('')\n    setPassword('')\n    setConfirmPassword('')\n    setEdit(false)\n  }\n\n  useEffect(() => {\n    dispatch(listUsers())\n    if (successUpdate || successCreateRegister) {\n      formCleanHandler()\n    }\n  }, [dispatch, successDelete, successUpdate, successCreateRegister])\n\n  const deleteHandler = (id) => {\n    // confirmAlert(Confirm(() => dispatch(deleteUser(id))))\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match')\n    } else {\n      edit\n        ? dispatch(updateUser({ _id: id, name, email, password, isAdmin }))\n        : dispatch(register(name, email, password))\n    }\n  }\n\n  const editHandler = (user) => {\n    setName(user.name)\n    setEmail(user.email)\n    setIsAdmin(user.isAdmin)\n    setPassword('')\n    setId(user._id)\n    setEdit(true)\n  }\n\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const itemsPerPage = 5\n  const indexOfLastItem = currentPage * itemsPerPage\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\n  const currentItems = users && users.slice(indexOfFirstItem, indexOfLastItem)\n  const totalItems = users && Math.ceil(users.length / itemsPerPage)\n\n  return (\n    <>\n      <div\n        className='modal fade'\n        id='editUserModal'\n        data-bs-backdrop='static'\n        data-bs-keyboard='false'\n        tabIndex='-1'\n        aria-labelledby='editUserModalLabel'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog'>\n          <div className='modal-content modal-background'>\n            <div className='modal-header'>\n              <h5 className='modal-title' id='editUserModalLabel'>\n                Edit User\n              </h5>\n              <button\n                type='button'\n                className='btn-close'\n                data-bs-dismiss='modal'\n                aria-label='Close'\n                onClick={formCleanHandler}\n              ></button>\n            </div>\n            <div className='modal-body'>\n              {message && <Message variant='danger'>{message}</Message>}\n              {successUpdate && (\n                <Message variant='success'>\n                  User has been updated successfully.\n                </Message>\n              )}\n              {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n              {loadingUpdate && <Loader />}\n              {successCreateRegister && (\n                <Message variant='success'>\n                  User has been Created successfully.\n                </Message>\n              )}\n              {errorCreateRegister && (\n                <Message variant='danger'>{errorCreateRegister}</Message>\n              )}\n              {loadingCreateRegister && <Loader />}\n\n              {loading ? (\n                <Loader />\n              ) : error ? (\n                <Message variant='danger'>{error}</Message>\n              ) : (\n                <form onSubmit={submitHandler}>\n                  <div className='form-group'>\n                    <label htmlFor='name'>Name</label>\n                    <input\n                      type='text'\n                      placeholder='Enter name'\n                      className='form-control'\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div className='form-group'>\n                    <label htmlFor='email'>Email Address</label>\n                    <input\n                      type='email'\n                      placeholder='Enter email'\n                      className='form-control'\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div className='form-group'>\n                    <label htmlFor='password'>Password</label>\n                    <input\n                      type='password'\n                      placeholder='Enter password'\n                      className='form-control'\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n                  <div className='form-group'>\n                    <label htmlFor='confirmPassword'>Confirm Password</label>\n                    <input\n                      type='password'\n                      placeholder='Confirm password'\n                      className='form-control'\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className='form-group'>\n                    <input\n                      type='checkbox'\n                      id='isAdmin'\n                      label='Is Admin'\n                      checked={isAdmin}\n                      onChange={(e) => setIsAdmin(e.target.checked)}\n                    />{' '}\n                    <label htmlFor='isAdmin' id='isAdmin'>\n                      Admin?\n                    </label>\n                  </div>\n\n                  <div className='modal-footer'>\n                    <button\n                      type='button'\n                      className='btn btn-secondary'\n                      data-bs-dismiss='modal'\n                      onClick={formCleanHandler}\n                    >\n                      Close\n                    </button>\n                    <button type='submit' className='btn btn-primary'>\n                      Update\n                    </button>\n                  </div>\n                </form>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='d-flex justify-content-between'>\n        <h1>Users</h1>\n        <button\n          className='btn btn-light btn-sm'\n          data-bs-toggle='modal'\n          data-bs-target='#editUserModal'\n        >\n          {' '}\n          <i className='fas fa-plus'></i> REGISTER NEW USER\n        </button>\n      </div>\n\n      {successDelete && (\n        <Message variant='success'>User has been deleted successfully.</Message>\n      )}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <div className='table-responsive'>\n            <table className='table table-sm hover bordered striped'>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>NAME</th>\n                  <th>EMAIL</th>\n                  <th>ADMIN</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentItems.map((user) => (\n                  <tr key={user._id}>\n                    <td>{user._id}</td>\n                    <td>{user.name}</td>\n                    <td>\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\n                    </td>\n                    <td>\n                      {user.isAdmin ? (\n                        <i\n                          className='fas fa-check'\n                          style={{ color: 'green' }}\n                        ></i>\n                      ) : (\n                        <i\n                          className='fas fa-times'\n                          style={{ color: 'red' }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      <button\n                        className='btn btn-light btn-sm'\n                        onClick={(e) => editHandler(user)}\n                        data-bs-toggle='modal'\n                        data-bs-target='#editUserModal'\n                      >\n                        <i className='fas fa-edit'></i>\n                      </button>\n\n                      <button\n                        className='btn btn-danger btn-sm'\n                        onClick={() => deleteHandler(user._id)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div className='d-flex justify-content-center'>\n            <ReactPaginate\n              previousLabel='previous'\n              previousClassName='page-item'\n              previousLinkClassName='page-link'\n              nextLabel='next'\n              nextClassName='page-item'\n              nextLinkClassName='page-link'\n              pageClassName='page-item'\n              pageLinkClassName='page-link'\n              activeClassName='page-item active'\n              activeLinkClassName={'page-link'}\n              breakLabel={'...'}\n              breakClassName={'page-item'}\n              breakLinkClassName={'page-link'}\n              pageCount={totalItems && totalItems}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={2}\n              onPageChange={(e) => setCurrentPage(e.selected + 1)}\n              containerClassName={'page pagination'}\n            />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useEffect, useState } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport Moment from 'react-moment'\nimport moment from 'moment'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  listBloodStore,\n  createBloodStore,\n  updateBloodStore,\n  deleteBloodStore,\n} from '../actions/bloodStoreActions'\n\nimport { confirmAlert } from 'react-confirm-alert'\nimport { Confirm } from '../components/Confirm'\n\nconst initialValues = {\n  donor: '',\n  hb: '',\n  blood_component: '',\n  blood_group: '',\n  unit: '',\n  active: true,\n  bag: '',\n}\n\nconst BloodStoreScreen = () => {\n  const [values, setValues] = useState(initialValues)\n  const [edit, setEdit] = useState(false)\n\n  const dispatch = useDispatch()\n  const bloodStoreList = useSelector((state) => state.bloodStoreList)\n  const { bloodStores, error, loading } = bloodStoreList\n\n  const bloodStoreCreate = useSelector((state) => state.bloodStoreCreate)\n  const {\n    error: errorCreate,\n    loading: loadingCreate,\n    success: successCreate,\n  } = bloodStoreCreate\n\n  const bloodStoreUpdate = useSelector((state) => state.bloodStoreUpdate)\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = bloodStoreUpdate\n\n  const bloodStoreDelete = useSelector((state) => state.bloodStoreDelete)\n  const {\n    error: errorDelete,\n    loading: loadingDelete,\n    success: successDelete,\n  } = bloodStoreDelete\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const formCleanHandler = () => {\n    setValues({\n      ...values,\n      donor: '',\n      hb: '',\n      blood_component: '',\n      blood_group: '',\n      unit: '',\n      active: true,\n      bag: '',\n    })\n    setEdit(false)\n  }\n\n  useEffect(() => {\n    dispatch(listBloodStore())\n    if (successCreate || successUpdate) {\n      formCleanHandler()\n    }\n    // eslint-disable-next-line\n  }, [dispatch, successCreate, successUpdate, successDelete])\n\n  const deleteHandler = (id) => {\n    confirmAlert(Confirm(() => dispatch(deleteBloodStore(id))))\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    edit\n      ? dispatch(updateBloodStore(values))\n      : dispatch(createBloodStore(values))\n  }\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value })\n  }\n\n  const editHandler = (e) => {\n    setValues({\n      ...values,\n      _id: e._id,\n      donor: e.donor,\n      hb: e.hb,\n      blood_component: e.blood_component,\n      blood_group: e.blood_group,\n      unit: e.unit,\n      bag: e.bag,\n    })\n    setEdit(true)\n  }\n\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const itemsPerPage = 5\n  const indexOfLastItem = currentPage * itemsPerPage\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\n  const filteredItems =\n    bloodStores && bloodStores.filter((blood) => blood.active)\n  const currentItems =\n    filteredItems && filteredItems.slice(indexOfFirstItem, indexOfLastItem)\n  const totalItems =\n    filteredItems && Math.ceil(filteredItems.length / itemsPerPage)\n\n  return (\n    <>\n      <div\n        className='modal fade'\n        id='editBloodStoreModal'\n        data-bs-backdrop='static'\n        data-bs-keyboard='false'\n        tabIndex='-1'\n        aria-labelledby='editBloodStoreModalLabel'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog'>\n          <div className='modal-content modal-background'>\n            <div className='modal-header'>\n              <h5 className='modal-title' id='editBloodStoreModalLabel'>\n                {edit ? 'Edit Blood Store' : 'Add Blood Store'}\n              </h5>\n              <button\n                type='button'\n                className='btn-close'\n                data-bs-dismiss='modal'\n                aria-label='Close'\n                onClick={formCleanHandler}\n              ></button>\n            </div>\n            <div className='modal-body'>\n              {successCreate && (\n                <Message variant='success'>\n                  Blood Registered Successfully\n                </Message>\n              )}\n              {loadingCreate ? (\n                <Loader />\n              ) : (\n                errorCreate && <Message variant='danger'>{errorCreate}</Message>\n              )}\n\n              {successUpdate && (\n                <Message variant='success'>Blood Updated Successfully</Message>\n              )}\n              {loadingUpdate ? (\n                <Loader />\n              ) : (\n                errorUpdate && <Message variant='danger'>{errorUpdate}</Message>\n              )}\n              {loading ? (\n                <Loader />\n              ) : error ? (\n                <Message variant='danger'>{error}</Message>\n              ) : (\n                <form onSubmit={submitHandler}>\n                  <div className='row gy-2'>\n                    <div className='form-group'>\n                      <label htmlFor='donor'>Donor</label>\n                      <input\n                        required\n                        name='donor'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.donor}\n                        className='form-control '\n                        placeholder='Enter donor name'\n                      />\n                    </div>\n\n                    <div className='form-group'>\n                      <label htmlFor='hb'>HB</label>\n                      <input\n                        required\n                        name='hb'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.hb}\n                        className='form-control '\n                        placeholder='Enter hb'\n                      />\n                    </div>\n\n                    <div className='form-group'>\n                      <label htmlFor='blood_group'>Blood Group</label>\n                      <select\n                        name='blood_group'\n                        onChange={handleChange}\n                        value={values.blood_group}\n                        className='form-control '\n                        required\n                      >\n                        <option value='' disabled>\n                          Blood Group...\n                        </option>\n                        <option value='A+'>A+</option>\n                        <option value='A-'>A-</option>\n                        <option value='B+'>B+</option>\n                        <option value='B-'>B-</option>\n                        <option value='AB+'>AB+</option>\n                        <option value='AB-'>AB-</option>\n                        <option value='O+'>O+</option>\n                        <option value='O-'>O-</option>\n                      </select>\n                    </div>\n\n                    <div className='form-group'>\n                      <label htmlFor='blood_component'>Blood Component</label>\n                      <select\n                        name='blood_component'\n                        onChange={handleChange}\n                        value={values.blood_component}\n                        className='form-control '\n                        required\n                      >\n                        <option value='' disabled>\n                          Blood Component...\n                        </option>\n                        <option value='Plasma'>Plasma</option>\n                        <option value='Platelet'>Platelet</option>\n                        <option value='RBC'>RBC</option>\n                        <option value='Whole Blood'>Whole Blood</option>\n                      </select>\n                    </div>\n\n                    <div className='form-group'>\n                      <label htmlFor='unit'>Unit</label>\n                      <input\n                        required\n                        name='unit'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.unit}\n                        className='form-control '\n                        placeholder='Enter unit per vol'\n                      />\n                    </div>\n\n                    <div className='form-group'>\n                      <label htmlFor='bag'>Bag</label>\n                      <input\n                        required\n                        name='bag'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.bag}\n                        className='form-control '\n                        placeholder='Enter bag number'\n                      />\n                    </div>\n\n                    <div className='modal-footer'>\n                      <button\n                        type='button'\n                        className='btn btn-secondary'\n                        data-bs-dismiss='modal'\n                        onClick={formCleanHandler}\n                      >\n                        Close\n                      </button>\n                      <button type='submit' className='btn btn-primary'>\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='d-flex justify-content-between'>\n        <h1>Blood Store</h1>\n        <button\n          className='btn btn-light btn-sm'\n          data-bs-toggle='modal'\n          data-bs-target='#editBloodStoreModal'\n        >\n          {' '}\n          <i className='fas fa-plus'></i> REGISTER NEW BLOOD\n        </button>\n      </div>\n\n      {successDelete && (\n        <Message variant='success'>Blood Deleted Successfully</Message>\n      )}\n      {loadingDelete ? (\n        <Loader />\n      ) : (\n        errorDelete && <Message variant='danger'>{errorDelete}</Message>\n      )}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <div className='table-responsive'>\n            <table className='table table-sm hover bordered striped'>\n              <thead>\n                <tr>\n                  <th>DATE & TIME</th>\n                  <th>B. GROUP</th>\n                  <th>B. COMPONENT</th>\n                  <th>UNIT</th>\n                  <th>BAG</th>\n                  <th>REGISTERER</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentItems &&\n                  currentItems.map((blood) => (\n                    <tr key={blood._id}>\n                      <td>\n                        <Moment format='YYYY-MM-DD HH:mm:ss'>\n                          {moment(blood.createdAt)}\n                        </Moment>\n                      </td>\n                      <td>{blood.blood_group}</td>\n                      <td>{blood.blood_component}</td>\n                      <td>{blood.unit}</td>\n                      <td>{blood.bag}</td>\n                      <td>{blood.user && blood.user.name}</td>\n\n                      <td className='btn-group' role='group'>\n                        <button\n                          className='btn btn-light btn-sm'\n                          onClick={(e) => editHandler(blood)}\n                          data-bs-toggle='modal'\n                          data-bs-target='#editBloodStoreModal'\n                        >\n                          <i className='fas fa-edit'></i>\n                        </button>\n                        {userInfo && userInfo.isAdmin && (\n                          <button\n                            className='btn btn-danger btn-sm'\n                            onClick={() => deleteHandler(blood._id)}\n                          >\n                            <i className='fas fa-trash'></i>\n                          </button>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n            {bloodStores && !loading && bloodStores.length === 0 && (\n              <span className='text-danger d-flex justify-content-center'>\n                No data found!\n              </span>\n            )}\n            {filteredItems && filteredItems.length > itemsPerPage && (\n              <div className='d-flex justify-content-center'>\n                <ReactPaginate\n                  previousLabel='previous'\n                  previousClassName='page-item'\n                  previousLinkClassName='page-link'\n                  nextLabel='next'\n                  nextClassName='page-item'\n                  nextLinkClassName='page-link'\n                  pageClassName='page-item'\n                  pageLinkClassName='page-link'\n                  activeClassName='page-item active'\n                  activeLinkClassName={'page-link'}\n                  breakLabel={'...'}\n                  breakClassName={'page-item'}\n                  breakLinkClassName={'page-link'}\n                  pageCount={totalItems && totalItems}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={2}\n                  onPageChange={(e) => setCurrentPage(e.selected + 1)}\n                  containerClassName={'page pagination'}\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default BloodStoreScreen\n","import axios from 'axios'\nimport {\n  BLOOD_REQUEST_REQUEST,\n  BLOOD_REQUEST_SUCCESS,\n  BLOOD_REQUEST_FAIL,\n  BLOOD_REQUEST_CREATE_FAIL,\n  BLOOD_REQUEST_CREATE_REQUEST,\n  BLOOD_REQUEST_CREATE_SUCCESS,\n  BLOOD_REQUEST_UPDATE_FAIL,\n  BLOOD_REQUEST_UPDATE_SUCCESS,\n  BLOOD_REQUEST_UPDATE_REQUEST,\n  BLOOD_REQUEST_DELETE_REQUEST,\n  BLOOD_REQUEST_DELETE_SUCCESS,\n  BLOOD_REQUEST_DELETE_FAIL,\n} from '../constants/bloodRequestConstants'\n\nexport const listBloodRequest = () => async (dispatch) => {\n  try {\n    dispatch({ type: BLOOD_REQUEST_REQUEST })\n\n    const { data } = await axios.get(`https://mernbloodbank.onrender.com/api/blood-request`)\n\n    dispatch({\n      type: BLOOD_REQUEST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_REQUEST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const createBloodRequest = (blood) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BLOOD_REQUEST_CREATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://mernbloodbank.onrender.com/api/blood-request`, blood, config)\n\n    dispatch({\n      type: BLOOD_REQUEST_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_REQUEST_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateBloodRequest = (blood) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BLOOD_REQUEST_UPDATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.put(`https://mernbloodbank.onrender.com/api/blood-request/${blood._id}`, blood, config)\n\n    dispatch({\n      type: BLOOD_REQUEST_UPDATE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_REQUEST_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteBloodRequest = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BLOOD_REQUEST_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://mernbloodbank.onrender.com/api/blood-request/${id}`, config)\n\n    dispatch({\n      type: BLOOD_REQUEST_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_REQUEST_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport moment from 'moment'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  listBloodRequest,\n  createBloodRequest,\n  updateBloodRequest,\n  deleteBloodRequest,\n} from '../actions/bloodRequestActions'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { Confirm } from '../components/Confirm'\n\nconst initialValues = {\n  patient_id: '',\n  patient_name: '',\n  blood_group: '',\n  platelet: '',\n  plasma: '',\n  rbc: '',\n  wb: '',\n}\n\nconst BloodRequestScreen = ({ match }) => {\n  const [values, setValues] = useState(initialValues)\n  const [edit, setEdit] = useState(false)\n\n  const dispatch = useDispatch()\n  const bloodRequestList = useSelector((state) => state.bloodRequestList)\n  const { bloodRequests, error, loading } = bloodRequestList\n\n  const bloodRequestCreate = useSelector((state) => state.bloodRequestCreate)\n  const {\n    error: errorCreate,\n    loading: loadingCreate,\n    success: successCreate,\n  } = bloodRequestCreate\n\n  const bloodRequestUpdate = useSelector((state) => state.bloodRequestUpdate)\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = bloodRequestUpdate\n\n  const bloodRequestDelete = useSelector((state) => state.bloodRequestDelete)\n  const {\n    error: errorDelete,\n    loading: loadingDelete,\n    success: successDelete,\n  } = bloodRequestDelete\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const formCleanHandler = () => {\n    setValues({\n      ...values,\n      patient_id: '',\n      patient_name: '',\n      blood_group: '',\n      platelet: '',\n      plasma: '',\n      rbc: '',\n      wb: '',\n    })\n    setEdit(false)\n  }\n\n  useEffect(() => {\n    dispatch(listBloodRequest())\n    if (successCreate || successUpdate) {\n      formCleanHandler()\n    }\n    // eslint-disable-next-line\n  }, [dispatch, successCreate, successUpdate, successDelete])\n\n  const deleteHandler = (id) => {\n    confirmAlert(Confirm(() => dispatch(deleteBloodRequest(id))))\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    edit\n      ? dispatch(updateBloodRequest(values))\n      : dispatch(createBloodRequest(values))\n  }\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value })\n  }\n\n  const editHandler = (e) => {\n    setValues({\n      ...values,\n      _id: e._id,\n      patient_id: e.patient_id,\n      patient_name: e.patient_name,\n      blood_group: e.blood_group,\n      platelet: e.blood_component.platelet,\n      plasma: e.blood_component.plasma,\n      rbc: e.blood_component.rbc,\n      wb: e.blood_component.wb,\n    })\n    setEdit(true)\n  }\n\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const itemsPerPage = 5\n  const indexOfLastItem = currentPage * itemsPerPage\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\n  const currentItems =\n    bloodRequests && bloodRequests.slice(indexOfFirstItem, indexOfLastItem)\n  const totalItems =\n    bloodRequests && Math.ceil(bloodRequests.length / itemsPerPage)\n\n  return (\n    <>\n      <div\n        className='modal fade'\n        id='editBloodRequestModal'\n        data-bs-backdrop='static'\n        data-bs-keyboard='false'\n        tabIndex='-1'\n        aria-labelledby='editBloodRequestModalLabel'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog'>\n          <div className='modal-content modal-background'>\n            <div className='modal-header'>\n              <h5 className='modal-title' id='editBloodRequestModalLabel'>\n                {edit ? 'Edit Blood Request' : 'Add Blood Request'}\n              </h5>\n              <button\n                type='button'\n                className='btn-close'\n                data-bs-dismiss='modal'\n                aria-label='Close'\n                onClick={formCleanHandler}\n              ></button>\n            </div>\n            <div className='modal-body'>\n              {successCreate && (\n                <Message variant='success'>\n                  Blood Registered Successfully\n                </Message>\n              )}\n              {loadingCreate ? (\n                <Loader />\n              ) : (\n                errorCreate && <Message variant='danger'>{errorCreate}</Message>\n              )}\n\n              {successUpdate && (\n                <Message variant='success'>Blood Updated Successfully</Message>\n              )}\n              {loadingUpdate ? (\n                <Loader />\n              ) : (\n                errorUpdate && <Message variant='danger'>{errorUpdate}</Message>\n              )}\n              {loading ? (\n                <Loader />\n              ) : error ? (\n                <Message variant='danger'>{error}</Message>\n              ) : (\n                <form onSubmit={submitHandler}>\n                  <div className='row gy-2'>\n                    <hr className='mt-0' />\n                    <label htmlFor='patient_id'>Patient ID</label>\n                    <div className='form-group'>\n                      <input\n                        name='patient_id'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.patient_id}\n                        className='form-control '\n                        placeholder='Enter patient ID'\n                        required\n                      />\n                    </div>\n                    <label htmlFor='patient_name'>Patient Name</label>\n                    <div className='form-group'>\n                      <input\n                        name='patient_name'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.patient_name}\n                        className='form-control '\n                        placeholder='Enter patient name'\n                        required\n                      />\n                    </div>\n                    <label htmlFor='blood_group'>Blood Group</label>\n                    <div className='form-group'>\n                      <select\n                        name='blood_group'\n                        onChange={handleChange}\n                        value={values.blood_group}\n                        className='form-control '\n                        required\n                      >\n                        <option value='' disabled>\n                          Blood Group...\n                        </option>\n                        <option value='A+'>A+</option>\n                        <option value='A-'>A-</option>\n                        <option value='B+'>B+</option>\n                        <option value='B-'>B-</option>\n                        <option value='AB+'>AB+</option>\n                        <option value='AB-'>AB-</option>\n                        <option value='O+'>O+</option>\n                        <option value='O-'>O-</option>\n                      </select>\n                    </div>\n                    <label htmlFor='plasma'>Plasma</label>\n                    <div className='form-group'>\n                      <input\n                        name='plasma'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.plasma}\n                        className='form-control '\n                        placeholder='Enter plasma'\n                      />\n                    </div>\n                    <label htmlFor='platelet'>Platelet</label>\n                    <div className='form-group'>\n                      <input\n                        name='platelet'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.platelet}\n                        className='form-control '\n                        placeholder='Enter platelet'\n                      />\n                    </div>\n                    <label htmlFor='rbc'>RBC</label>\n                    <div className='form-group'>\n                      <input\n                        name='rbc'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.rbc}\n                        className='form-control '\n                        placeholder='Enter rbc'\n                      />\n                    </div>\n                    <label htmlFor='wb'>Whole Blood</label>\n                    <div className='form-group'>\n                      <input\n                        name='wb'\n                        onChange={handleChange}\n                        type='text'\n                        value={values.wb}\n                        className='form-control '\n                        placeholder='Enter whole blood'\n                      />\n                    </div>\n\n                    <div className='modal-footer'>\n                      <button\n                        type='button'\n                        className='btn btn-secondary'\n                        data-bs-dismiss='modal'\n                        onClick={formCleanHandler}\n                      >\n                        Close\n                      </button>\n                      <button type='submit' className='btn btn-primary'>\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='d-flex justify-content-between'>\n        <h1>Blood Request</h1>\n        <button\n          className='btn btn-light btn-sm'\n          data-bs-toggle='modal'\n          data-bs-target='#editBloodRequestModal'\n        >\n          {' '}\n          <i className='fas fa-plus'></i> REGISTER NEW REQUEST\n        </button>\n      </div>\n\n      {successDelete && (\n        <Message variant='success'>Blood Deleted Successfully</Message>\n      )}\n      {loadingDelete ? (\n        <Loader />\n      ) : (\n        errorDelete && <Message variant='danger'>{errorDelete}</Message>\n      )}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <div className='table-responsive'>\n            <table className='table table-sm hover bordered striped'>\n              <thead>\n                <tr>\n                  <th>DATE & TIME</th>\n                  <th>P. ID</th>\n                  <th>P. Name</th>\n                  <th>B. Group</th>\n                  <th>Plasma</th>\n                  <th>Platelet</th>\n                  <th>RBC</th>\n                  <th>W. B</th>\n                  <th>REGISTERER</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {bloodRequests &&\n                  currentItems.map((blood) => (\n                    <tr key={blood._id}>\n                      <td>\n                        <Moment format='YYYY-MM-DD HH:mm:ss'>\n                          {moment(blood.createdAt)}\n                        </Moment>\n                      </td>\n\n                      <td>{blood.patient_id}</td>\n                      <td>{blood.patient_name}</td>\n                      <td>{blood.blood_group}</td>\n                      <td>{blood.blood_component.plasma}</td>\n                      <td>{blood.blood_component.platelet}</td>\n                      <td>{blood.blood_component.rbc}</td>\n                      <td>{blood.blood_component.wb}</td>\n\n                      <td>{blood.user && blood.user.name}</td>\n\n                      <td className='btn-group' role='group'>\n                        <button\n                          className='btn btn-light btn-sm'\n                          onClick={(e) => editHandler(blood)}\n                          data-bs-toggle='modal'\n                          data-bs-target='#editBloodRequestModal'\n                        >\n                          <i className='fas fa-edit'></i>\n                        </button>\n                        <Link\n                          to={`/blood-issue/${blood._id}`}\n                          className='btn btn-primary btn-sm'\n                        >\n                          <i className='fas fa-share'></i>\n                        </Link>\n                        {userInfo && userInfo.isAdmin && (\n                          <button\n                            className='btn btn-danger btn-sm'\n                            onClick={() => deleteHandler(blood._id)}\n                          >\n                            <i className='fas fa-trash'></i>\n                          </button>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n            {bloodRequests && !loading && bloodRequests.length === 0 && (\n              <span className='text-danger d-flex justify-content-center'>\n                No data found!\n              </span>\n            )}\n            {bloodRequests && bloodRequests.length > itemsPerPage && (\n              <div className='d-flex justify-content-center'>\n                <ReactPaginate\n                  previousLabel='previous'\n                  previousClassName='page-item'\n                  previousLinkClassName='page-link'\n                  nextLabel='next'\n                  nextClassName='page-item'\n                  nextLinkClassName='page-link'\n                  pageClassName='page-item'\n                  pageLinkClassName='page-link'\n                  activeClassName='page-item active'\n                  activeLinkClassName={'page-link'}\n                  breakLabel={'...'}\n                  breakClassName={'page-item'}\n                  breakLinkClassName={'page-link'}\n                  pageCount={totalItems && totalItems}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={2}\n                  onPageChange={(e) => setCurrentPage(e.selected + 1)}\n                  containerClassName={'page pagination'}\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default BloodRequestScreen\n","const NotFound = () => {\n  return (\n    <div>\n      <div className='text-danger text-center mt-5 '>\n        <span\n          className='spinner-border'\n          style={{ width: '200px', height: '200px' }}\n        ></span>\n      </div>\n\n      <h1 className='x-large text-danger text-center  display-1'>\n        Page Not Found\n      </h1>\n      <p className='text-center text-muted'>Sorry, this page does not exist</p>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getLogHistory } from '../actions/userActions'\nimport ReactPaginate from 'react-paginate'\nimport Moment from 'react-moment'\nimport moment from 'moment'\n\nconst UserLogHistoryScreen = () => {\n  const dispatch = useDispatch()\n\n  const userLogHistory = useSelector((state) => state.userLogHistory)\n  const { loading, error, logHistory } = userLogHistory\n\n  useEffect(() => {\n    dispatch(getLogHistory())\n  }, [dispatch])\n\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const itemsPerPage = 10\n  const indexOfLastItem = currentPage * itemsPerPage\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\n  const currentItems =\n    logHistory && logHistory.slice(indexOfFirstItem, indexOfLastItem)\n  const totalItems = logHistory && Math.ceil(logHistory.length / itemsPerPage)\n\n  return (\n    <>\n      <h1>Users Login History</h1>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <div className='table-responsive'>\n            <table className='table table-sm hover bordered striped'>\n              <thead>\n                <tr>\n                  <th>LOG ID</th>\n                  <th>NAME</th>\n                  <th>EMAIL</th>\n                  <th>LOGIN DATE</th>\n                  <th>LOGIN TIME</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentItems &&\n                  currentItems.map((log) => (\n                    <tr key={log._id}>\n                      <td>{log._id}</td>\n                      <td>{log.user.name}</td>\n                      <td>\n                        <a href={`mailto:${log.user.email}`}>\n                          {log.user.email}\n                        </a>\n                      </td>\n                      <td>\n                        <Moment format='YYYY-MM-DD'>\n                          {moment(log.logDate)}\n                        </Moment>\n                      </td>\n                      <td>\n                        <Moment format='HH:mm:ss'>{moment(log.logDate)}</Moment>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n          {logHistory && logHistory.length > itemsPerPage && (\n            <div className='d-flex justify-content-center'>\n              <ReactPaginate\n                previousLabel='previous'\n                previousClassName='page-item'\n                previousLinkClassName='page-link'\n                nextLabel='next'\n                nextClassName='page-item'\n                nextLinkClassName='page-link'\n                pageClassName='page-item'\n                pageLinkClassName='page-link'\n                activeClassName='page-item active'\n                activeLinkClassName={'page-link'}\n                breakLabel={'...'}\n                breakClassName={'page-item'}\n                breakLinkClassName={'page-link'}\n                pageCount={totalItems && totalItems}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                onPageChange={(e) => setCurrentPage(e.selected + 1)}\n                containerClassName={'page pagination'}\n              />\n            </div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default UserLogHistoryScreen\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, userInfo } = userLogin\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !userInfo && !loading ? (\n          <Redirect to='/login' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst AdminPrivateRoute = ({ component: Component, ...rest }) => {\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, userInfo } = userLogin\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !userInfo && !loading ? (\n          <Redirect to='/login' />\n        ) : userInfo && !userInfo.isAdmin ? (\n          <Redirect to='/' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  )\n}\n\nexport default AdminPrivateRoute\n","import React, { useEffect, useState } from 'react'\nimport ReactPaginate from 'react-paginate'\n\nimport Moment from 'react-moment'\nimport moment from 'moment'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  listBloodIssue,\n  deleteBloodIssue,\n  createBloodIssue,\n} from '../actions/bloodIssueActions'\n\nimport { listBloodStore } from '../actions/bloodStoreActions'\n\nimport {\n  listBloodRequest,\n  // updateBloodRequest,\n} from '../actions/bloodRequestActions'\n\nconst initialValues = {\n  patient: '',\n  plasma: '',\n  platelet: '',\n  rbc: '',\n  wb: '',\n}\n\nconst BloodIssueScreen = ({ match }) => {\n  const bloodRequestId = match.params.id\n\n  const [values, setValues] = useState(initialValues)\n  const [edit, setEdit] = useState(false)\n  const [message, setMessage] = useState('')\n\n  const dispatch = useDispatch()\n  const bloodIssueList = useSelector((state) => state.bloodIssueList)\n  const { bloodIssues, error, loading } = bloodIssueList\n\n  const bloodIssueCreate = useSelector((state) => state.bloodIssueCreate)\n  const {\n    error: errorCreate,\n    loading: loadingCreate,\n    success: successCreate,\n  } = bloodIssueCreate\n\n  const bloodIssueDelete = useSelector((state) => state.bloodIssueDelete)\n  const {\n    error: errorDelete,\n    loading: loadingDelete,\n    success: successDelete,\n  } = bloodIssueDelete\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const bloodRequestList = useSelector((state) => state.bloodRequestList)\n  const { bloodRequests, loading: loadingBloodRequestList } = bloodRequestList\n\n  const bloodRequestCreate = useSelector((state) => state.bloodRequestCreate)\n  const { success: successCreateRequest } = bloodRequestCreate\n\n  const bloodStoreList = useSelector((state) => state.bloodStoreList)\n  const { bloodStores, loading: loadingBloodStoreList } = bloodStoreList\n\n  const formCleanHandler = () => {\n    setValues({\n      ...values,\n      patient: '',\n      plasma: '',\n      platelet: '',\n      rbc: '',\n      wb: '',\n    })\n    setEdit(false)\n  }\n\n  useEffect(() => {\n    dispatch(listBloodRequest())\n    dispatch(listBloodIssue())\n    dispatch(listBloodStore())\n    if (successCreate) {\n      formCleanHandler()\n    }\n    // eslint-disable-next-line\n  }, [dispatch, successCreate, successDelete, successCreateRequest])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you use?')) {\n      dispatch(deleteBloodIssue(id))\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    const { plasma, platelet, rbc, wb } = values\n\n    if (!plasma && !platelet && !rbc && !wb) {\n      setMessage('You have to select a transfusion BAG')\n    } else {\n      dispatch(createBloodIssue(values))\n    }\n  }\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value })\n  }\n\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const itemsPerPage = 5\n  const indexOfLastItem = currentPage * itemsPerPage\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\n  const currentItems =\n    bloodIssues && bloodIssues.slice(indexOfFirstItem, indexOfLastItem)\n  const totalItems = bloodIssues && Math.ceil(bloodIssues.length / itemsPerPage)\n\n  return (\n    <>\n      <div\n        className='modal fade'\n        id='editBloodIssueModal'\n        data-bs-backdrop='static'\n        data-bs-keyboard='false'\n        tabIndex='-1'\n        aria-labelledby='editBloodIssueModalLabel'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog'>\n          <div className='modal-content modal-background'>\n            <div className='modal-header'>\n              <h5 className='modal-title' id='editBloodIssueModalLabel'>\n                {edit ? 'Edit Blood Issue' : 'Add Blood Issue'}\n              </h5>\n              <button\n                type='button'\n                className='btn-close'\n                data-bs-dismiss='modal'\n                aria-label='Close'\n                onClick={formCleanHandler}\n              ></button>\n            </div>\n            <div className='modal-body'>\n              {message && <Message variant='danger'>{message}</Message>}\n              {successCreate && (\n                <Message variant='success'>\n                  Blood Registered Successfully\n                </Message>\n              )}\n              {loadingCreate ? (\n                <Loader />\n              ) : (\n                errorCreate && <Message variant='danger'>{errorCreate}</Message>\n              )}\n\n              {loading ? (\n                <Loader />\n              ) : error ? (\n                <Message variant='danger'>{error}</Message>\n              ) : (\n                <form onSubmit={submitHandler}>\n                  <div className='row gy-2'>\n                    <hr className='mt-0' />\n\n                    <label htmlFor='patient'>Patient</label>\n                    <div className='form-group'>\n                      <select\n                        name='patient'\n                        onChange={handleChange}\n                        value={values.patient}\n                        className='form-control '\n                        required\n                      >\n                        <option value=''>Patient...</option>\n                        {!loadingBloodRequestList &&\n                          bloodRequests &&\n                          bloodRequests.map(\n                            (blood) =>\n                              blood._id === bloodRequestId && (\n                                <option key={blood._id} value={blood._id}>\n                                  {blood.patient_name}\n                                </option>\n                              )\n                          )}\n                      </select>\n                    </div>\n\n                    {/* Plasma */}\n                    {bloodRequests &&\n                      bloodRequests.map(\n                        (blood) =>\n                          bloodRequestId === blood._id &&\n                          blood.blood_component.plasma > 0 && (\n                            <div className='form-group' key={blood._id}>\n                              <label htmlFor='platelet'>Plasma</label>\n                              <select\n                                name='plasma'\n                                onChange={handleChange}\n                                value={values.plasma}\n                                className='form-control '\n                              >\n                                <option value=''>Plasma...</option>\n                                {!loadingBloodStoreList &&\n                                  bloodStores &&\n                                  bloodStores.map(\n                                    (blood) =>\n                                      blood.blood_component === 'Plasma' &&\n                                      blood.active && (\n                                        <option\n                                          key={blood._id}\n                                          value={blood._id}\n                                        >\n                                          {blood.bag}\n                                        </option>\n                                      )\n                                  )}\n                              </select>\n                            </div>\n                          )\n                      )}\n\n                    {/* Platelet */}\n                    {bloodRequests &&\n                      bloodRequests.map(\n                        (blood) =>\n                          bloodRequestId === blood._id &&\n                          blood.blood_component.platelet > 0 && (\n                            <div className='form-group' key={blood._id}>\n                              <label htmlFor='platelet'>Platelet</label>\n                              <select\n                                name='platelet'\n                                onChange={handleChange}\n                                value={values.platelet}\n                                className='form-control '\n                              >\n                                <option value=''>Platelet...</option>\n                                {!loadingBloodStoreList &&\n                                  bloodStores &&\n                                  bloodStores.map(\n                                    (blood) =>\n                                      blood.blood_component === 'Platelet' &&\n                                      blood.active && (\n                                        <option\n                                          key={blood._id}\n                                          value={blood._id}\n                                        >\n                                          {blood.bag}\n                                        </option>\n                                      )\n                                  )}\n                              </select>\n                            </div>\n                          )\n                      )}\n\n                    {/* RBC */}\n                    {bloodRequests &&\n                      bloodRequests.map(\n                        (blood) =>\n                          bloodRequestId === blood._id &&\n                          blood.blood_component.rbc > 0 && (\n                            <div className='form-group' key={blood._id}>\n                              <label htmlFor='rbc'>RBC</label>\n                              <select\n                                name='rbc'\n                                onChange={handleChange}\n                                value={values.rbc}\n                                className='form-control '\n                              >\n                                <option value=''>RBC...</option>\n                                {!loadingBloodStoreList &&\n                                  bloodStores &&\n                                  bloodStores.map(\n                                    (blood) =>\n                                      blood.blood_component === 'RBC' &&\n                                      blood.active && (\n                                        <option\n                                          key={blood._id}\n                                          value={blood._id}\n                                        >\n                                          {blood.bag}\n                                        </option>\n                                      )\n                                  )}\n                              </select>\n                            </div>\n                          )\n                      )}\n\n                    {/* Whole Blood */}\n                    {bloodRequests &&\n                      bloodRequests.map(\n                        (blood) =>\n                          bloodRequestId === blood._id &&\n                          blood.blood_component.wb > 0 && (\n                            <div className='form-group' key={blood._id}>\n                              <label htmlFor='wb'>Whole Blood</label>\n                              <select\n                                name='wb'\n                                onChange={handleChange}\n                                value={values.wb}\n                                className='form-control '\n                              >\n                                <option value=''>Whole Blood...</option>\n                                {!loadingBloodStoreList &&\n                                  bloodStores &&\n                                  bloodStores.map(\n                                    (blood) =>\n                                      blood.blood_component === 'Whole Blood' &&\n                                      blood.active && (\n                                        <option\n                                          key={blood._id}\n                                          value={blood._id}\n                                        >\n                                          {blood.bag}\n                                        </option>\n                                      )\n                                  )}\n                              </select>\n                            </div>\n                          )\n                      )}\n\n                    <div className='modal-footer'>\n                      <button\n                        type='button'\n                        className='btn btn-secondary'\n                        data-bs-dismiss='modal'\n                        onClick={formCleanHandler}\n                      >\n                        Close\n                      </button>\n                      <button type='submit' className='btn btn-primary'>\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='d-flex justify-content-between'>\n        <h1>Blood Issue</h1>\n        <button\n          className='btn btn-light btn-sm'\n          data-bs-toggle='modal'\n          data-bs-target='#editBloodIssueModal'\n        >\n          {' '}\n          <i className='fas fa-plus'></i> REGISTER NEW BLOOD ISSUE\n        </button>\n      </div>\n\n      {loadingDelete ? (\n        <Loader />\n      ) : (\n        errorDelete && <Message variant='danger'>{errorDelete}</Message>\n      )}\n      {successDelete && (\n        <Message variant='success'>Blood Deleted Successfully</Message>\n      )}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <div className='table-responsive'>\n            <table className='table table-sm hover bordered striped'>\n              <thead>\n                <tr>\n                  <th>DATE & TIME</th>\n                  <th>P. ID</th>\n                  <th>P. Name</th>\n                  <th>PLASMA</th>\n                  <th>PLATELET</th>\n                  <th>RBC</th>\n                  <th>W.B</th>\n                  <th>REGISTERER</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {bloodIssues &&\n                  currentItems.map((blood) => (\n                    <tr key={blood._id}>\n                      <td>\n                        <Moment format='YYYY-MM-DD HH:mm:ss'>\n                          {moment(blood.createdAt)}\n                        </Moment>\n                      </td>\n                      <td>{blood.patient && blood.patient.patient_id}</td>\n                      <td>{blood.patient && blood.patient.patient_name}</td>\n                      <td>\n                        {blood.blood_component &&\n                          bloodStores &&\n                          bloodStores.map(\n                            (b) =>\n                              b._id === blood.blood_component.plasma && b.bag\n                          )}\n                      </td>\n                      <td>\n                        {blood.blood_component &&\n                          bloodStores &&\n                          bloodStores.map(\n                            (b) =>\n                              b._id === blood.blood_component.platelet && b.bag\n                          )}\n                      </td>\n                      <td>\n                        {blood.blood_component &&\n                          bloodStores &&\n                          bloodStores.map(\n                            (b) => b._id === blood.blood_component.rbc && b.bag\n                          )}\n                      </td>\n\n                      <td>\n                        {blood.blood_component &&\n                          bloodStores &&\n                          bloodStores.map(\n                            (b) => b._id === blood.blood_component.wb && b.bag\n                          )}\n                      </td>\n                      <td>{blood.user && blood.user.name}</td>\n\n                      <td>\n                        {userInfo && userInfo.isAdmin && (\n                          <button\n                            className='btn btn-danger btn-sm'\n                            onClick={() => deleteHandler(blood._id)}\n                          >\n                            <i className='fas fa-trash'></i>\n                          </button>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n            {bloodIssues && !loading && bloodIssues.length === 0 && (\n              <span className='text-danger d-flex justify-content-center'>\n                No data found!\n              </span>\n            )}\n            {bloodIssues && bloodIssues.length > itemsPerPage && (\n              <div className='d-flex justify-content-center'>\n                <ReactPaginate\n                  previousLabel='previous'\n                  previousClassName='page-item'\n                  previousLinkClassName='page-link'\n                  nextLabel='next'\n                  nextClassName='page-item'\n                  nextLinkClassName='page-link'\n                  pageClassName='page-item'\n                  pageLinkClassName='page-link'\n                  activeClassName='page-item active'\n                  activeLinkClassName={'page-link'}\n                  breakLabel={'...'}\n                  breakClassName={'page-item'}\n                  breakLinkClassName={'page-link'}\n                  pageCount={totalItems}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={2}\n                  onPageChange={(e) => setCurrentPage(e.selected + 1)}\n                  containerClassName={'page pagination'}\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default BloodIssueScreen\n","import axios from 'axios'\nimport {\n  BLOOD_ISSUE_REQUEST,\n  BLOOD_ISSUE_SUCCESS,\n  BLOOD_ISSUE_FAIL,\n  BLOOD_ISSUE_CREATE_FAIL,\n  BLOOD_ISSUE_CREATE_REQUEST,\n  BLOOD_ISSUE_CREATE_SUCCESS,\n  BLOOD_ISSUE_DELETE_REQUEST,\n  BLOOD_ISSUE_DELETE_SUCCESS,\n  BLOOD_ISSUE_DELETE_FAIL,\n} from '../constants/bloodIssueConstants'\n\nexport const listBloodIssue = () => async (dispatch) => {\n  try {\n    dispatch({ type: BLOOD_ISSUE_REQUEST })\n\n    const { data } = await axios.get(`https://mernbloodbank.onrender.com/api/blood-issue`)\n\n    dispatch({\n      type: BLOOD_ISSUE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_ISSUE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const createBloodIssue = (blood) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BLOOD_ISSUE_CREATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://mernbloodbank.onrender.com/api/blood-issue`, blood, config)\n\n    dispatch({\n      type: BLOOD_ISSUE_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_ISSUE_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteBloodIssue = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BLOOD_ISSUE_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://mernbloodbank.onrender.com/api/blood-issue/${id}`, config)\n\n    dispatch({\n      type: BLOOD_ISSUE_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: BLOOD_ISSUE_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport Moment from 'react-moment'\nimport moment from 'moment'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  listComment,\n  createComment,\n  updateComment,\n  deleteComment,\n} from '../actions/commentActions'\n\nimport { confirmAlert } from 'react-confirm-alert'\nimport { Confirm } from '../components/Confirm'\n\nconst CommentScreen = () => {\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n  const commentList = useSelector((state) => state.commentList)\n  const { comments, error, loading } = commentList\n\n  const commentCreate = useSelector((state) => state.commentCreate)\n  const {\n    error: errorCreate,\n    loading: loadingCreate,\n    success: successCreate,\n  } = commentCreate\n\n  const commentUpdate = useSelector((state) => state.commentUpdate)\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = commentUpdate\n\n  const commentDelete = useSelector((state) => state.commentDelete)\n  const {\n    error: errorDelete,\n    loading: loadingDelete,\n    success: successDelete,\n  } = commentDelete\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const formCleanHandler = () => {\n    setComment('')\n  }\n\n  useEffect(() => {\n    dispatch(listComment())\n    if (successCreate || successUpdate) {\n      formCleanHandler()\n    }\n    // eslint-disable-next-line\n  }, [dispatch, successCreate, successUpdate, successDelete])\n\n  const deleteHandler = (id) => {\n    confirmAlert(Confirm(() => dispatch(deleteComment(id))))\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createComment(comment))\n  }\n\n  const editHandler = (e) => {\n    dispatch(updateComment(e))\n  }\n\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const itemsPerPage = 5\n  const indexOfLastItem = currentPage * itemsPerPage\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\n  const currentItems =\n    comments && comments.slice(indexOfFirstItem, indexOfLastItem)\n  const totalItems = comments && Math.ceil(comments.length / itemsPerPage)\n\n  return (\n    <>\n      <div\n        className='modal fade'\n        id='editCommentModal'\n        data-bs-backdrop='static'\n        data-bs-keyboard='false'\n        tabIndex='-1'\n        aria-labelledby='editCommentModalLabel'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog'>\n          <div className='modal-content modal-background'>\n            <div className='modal-header'>\n              <h5 className='modal-title' id='editCommentModalLabel'>\n                Add Comment\n              </h5>\n              <button\n                type='button'\n                className='btn-close'\n                data-bs-dismiss='modal'\n                aria-label='Close'\n                onClick={formCleanHandler}\n              ></button>\n            </div>\n            <div className='modal-body'>\n              {successCreate && (\n                <Message variant='success'>Comment Added Successfully</Message>\n              )}\n              {loadingCreate ? (\n                <Loader />\n              ) : (\n                errorCreate && <Message variant='danger'>{errorCreate}</Message>\n              )}\n\n              {loading ? (\n                <Loader />\n              ) : error ? (\n                <Message variant='danger'>{error}</Message>\n              ) : (\n                <form onSubmit={submitHandler}>\n                  <div className='row gy-2'>\n                    <hr className='mt-0' />\n\n                    <div className='form-group'>\n                      <label htmlFor='comment'>Comment</label>\n                      <input\n                        required\n                        name='comment'\n                        type='text'\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                        className='form-control '\n                        placeholder='Enter comment '\n                      />\n                    </div>\n\n                    <div className='modal-footer'>\n                      <button\n                        type='button'\n                        className='btn btn-secondary'\n                        data-bs-dismiss='modal'\n                        onClick={formCleanHandler}\n                      >\n                        Close\n                      </button>\n                      <button type='submit' className='btn btn-primary'>\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='d-flex justify-content-between'>\n        <h1>Comments</h1>\n        <button\n          className='btn btn-light btn-sm'\n          data-bs-toggle='modal'\n          data-bs-target='#editCommentModal'\n        >\n          {' '}\n          <i className='fas fa-plus'></i> ADD NEW COMMENT\n        </button>\n      </div>\n\n      {successDelete && (\n        <Message variant='success'>Comment Deleted Successfully</Message>\n      )}\n      {loadingDelete ? (\n        <Loader />\n      ) : (\n        errorDelete && <Message variant='danger'>{errorDelete}</Message>\n      )}\n      {successUpdate && (\n        <Message variant='success'>Comment Updated Successfully</Message>\n      )}\n      {loadingUpdate ? (\n        <Loader />\n      ) : (\n        errorUpdate && <Message variant='danger'>{errorUpdate}</Message>\n      )}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <div className='table-responsive'>\n            <table className='table table-sm hover bordered striped'>\n              <thead>\n                <tr>\n                  <th>DATE & TIME</th>\n                  <th>COMMENTED BY</th>\n                  <th>COMMENT</th>\n                  <th>APPROVED BY</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentItems &&\n                  currentItems.map((comment) => (\n                    <tr key={comment._id}>\n                      <td>\n                        <Moment format='YYYY-MM-DD HH:mm:ss'>\n                          {moment(comment.createdAt)}\n                        </Moment>\n                      </td>\n                      <td>{comment.commentedBy && comment.commentedBy.name}</td>\n                      <td>{comment.comment}</td>\n                      <td>\n                        {comment.commentApprovedBy ? (\n                          comment.commentApprovedBy.name\n                        ) : (\n                          <i\n                            className='fas fa-times'\n                            style={{ color: 'red' }}\n                          ></i>\n                        )}\n                      </td>\n\n                      <td className='btn-group' role='group'>\n                        <button\n                          className='btn btn-success btn-sm'\n                          onClick={(e) => editHandler(comment)}\n                          disabled={!comment.active}\n                        >\n                          <i className='fas fa-check'></i>\n                        </button>\n\n                        {comment.commentedBy &&\n                          comment.commentedBy._id === userInfo._id && (\n                            <button\n                              className='btn btn-danger btn-sm'\n                              onClick={() => deleteHandler(comment._id)}\n                            >\n                              <i className='fas fa-trash'></i>\n                            </button>\n                          )}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n            {comments && !loading && comments.length === 0 && (\n              <span className='text-danger d-flex justify-content-center'>\n                No data found!\n              </span>\n            )}\n            {comments.length > itemsPerPage && (\n              <div className='d-flex justify-content-center'>\n                <ReactPaginate\n                  previousLabel='previous'\n                  previousClassName='page-item'\n                  previousLinkClassName='page-link'\n                  nextLabel='next'\n                  nextClassName='page-item'\n                  nextLinkClassName='page-link'\n                  pageClassName='page-item'\n                  pageLinkClassName='page-link'\n                  activeClassName='page-item active'\n                  activeLinkClassName={'page-link'}\n                  breakLabel={'...'}\n                  breakClassName={'page-item'}\n                  breakLinkClassName={'page-link'}\n                  pageCount={totalItems && totalItems}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={2}\n                  onPageChange={(e) => setCurrentPage(e.selected + 1)}\n                  containerClassName={'page pagination'}\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default CommentScreen\n","import axios from 'axios'\nimport {\n  COMMENT_REQUEST,\n  COMMENT_SUCCESS,\n  COMMENT_FAIL,\n  COMMENT_CREATE_FAIL,\n  COMMENT_CREATE_REQUEST,\n  COMMENT_CREATE_SUCCESS,\n  COMMENT_UPDATE_FAIL,\n  COMMENT_UPDATE_SUCCESS,\n  COMMENT_UPDATE_REQUEST,\n  COMMENT_DELETE_REQUEST,\n  COMMENT_DELETE_SUCCESS,\n  COMMENT_DELETE_FAIL,\n} from '../constants/commentConstants'\n\nexport const listComment = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: COMMENT_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://mernbloodbank.onrender.com/api/comment`, config)\n\n    dispatch({\n      type: COMMENT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: COMMENT_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const createComment = (comment) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: COMMENT_CREATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://mernbloodbank.onrender.com/api/comment`, { comment }, config)\n\n    dispatch({\n      type: COMMENT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: COMMENT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateComment = (comment) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: COMMENT_UPDATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.put(`https://mernbloodbank.onrender.com/api/comment/${comment._id}`, comment, config)\n\n    dispatch({\n      type: COMMENT_UPDATE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: COMMENT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteComment = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: COMMENT_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://mernbloodbank.onrender.com/api/comment/${id}`, config)\n\n    dispatch({\n      type: COMMENT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: COMMENT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listBloodStore } from '../actions/bloodStoreActions'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nconst ReportScreen = () => {\n  const [from, setFrom] = useState('')\n  const [to, setTo] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n  const bloodStoreList = useSelector((state) => state.bloodStoreList)\n  const { bloodStores, error, loading } = bloodStoreList\n\n  useEffect(() => {\n    dispatch(listBloodStore())\n  }, [dispatch])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (from > to) {\n      setMessage('The End date must be greater than the Start date.')\n    }\n  }\n\n  const filteredBloodStore = (e) =>\n    bloodStores &&\n    bloodStores.filter(\n      ({ blood_component, blood_group, createdAt }) =>\n        createdAt >= from &&\n        createdAt <= to &&\n        blood_component === e.blood_component &&\n        blood_group === e.blood_group\n    )\n\n  return (\n    <>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <div className='row'>\n          <div className='col-md-5'>\n            <div className='mb-3'>\n              <label htmlFor='from' className='form-label'>\n                From\n              </label>\n              <input\n                type='date'\n                className='form-control'\n                id='from'\n                placeholder='name@example.com'\n                onChange={(e) => setFrom(e.target.value)}\n                value={from}\n              />\n            </div>\n          </div>\n          <div className='col-md-5'>\n            <div className='mb-3'>\n              <label htmlFor='to' className='form-label'>\n                To\n              </label>\n              <input\n                type='date'\n                className='form-control'\n                id='to'\n                placeholder='name@example.com'\n                onChange={(e) => setTo(e.target.value)}\n                value={to}\n              />\n            </div>\n          </div>\n          <div className='col-md-2 p-1'>\n            <div className='mb-3 pt-4'>\n              <button className='btn btn-dark'>\n                <i className='fa fa-search'></i> Search\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n      {message !== null && <Message variant='danger'>{message}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <div className=''>\n          <div className='row mt-3'>\n            {/* <h3 className='text-center summary'>CURRENT SUMMARY BLOOD STORE</h3> */}\n            <div className='col-lg-3 col-md-6 col-sm-6 col-12'>\n              <div className='card text-center'>\n                <div className='card-header'>Plasma</div>\n                <div className='card-body '>\n                  <ul className='list-group list-group-flush'>\n                    <li className='list-group-item'>\n                      <strong>A + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Plasma',\n                            blood_group: 'A+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Plasma',\n                            blood_group: 'B+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Plasma',\n                            blood_group: 'AB+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Plasma',\n                            blood_group: 'O+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>A - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Plasma',\n                            blood_group: 'A-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Plasma',\n                            blood_group: 'B-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Plasma',\n                            blood_group: 'AB-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Plasma',\n                            blood_group: 'O-',\n                          }).length}\n                      </strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className='card-footer text-muted'>Today</div>\n              </div>\n            </div>\n\n            <div className='col-lg-3 col-md-6 col-sm-6 col-12'>\n              <div className='card text-center'>\n                <div className='card-header'>Platelet</div>\n                <div className='card-body '>\n                  <ul className='list-group list-group-flush'>\n                    <li className='list-group-item'>\n                      <strong>A + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Platelet',\n                            blood_group: 'A+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Platelet',\n                            blood_group: 'B+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Platelet',\n                            blood_group: 'AB+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Platelet',\n                            blood_group: 'O+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>A - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Platelet',\n                            blood_group: 'A-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Platelet',\n                            blood_group: 'B-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Platelet',\n                            blood_group: 'AB-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Platelet',\n                            blood_group: 'O-',\n                          }).length}\n                      </strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className='card-footer text-muted'>Today</div>\n              </div>\n            </div>\n\n            <div className='col-lg-3 col-md-6 col-sm-6 col-12'>\n              <div className='card text-center'>\n                <div className='card-header'>RBC</div>\n                <div className='card-body '>\n                  <ul className='list-group list-group-flush'>\n                    <li className='list-group-item'>\n                      <strong>A + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'RBC',\n                            blood_group: 'A+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'RBC',\n                            blood_group: 'B+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'RBC',\n                            blood_group: 'AB+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'RBC',\n                            blood_group: 'O+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>A - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'RBC',\n                            blood_group: 'A-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'RBC',\n                            blood_group: 'B-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'RBC',\n                            blood_group: 'AB-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'RBC',\n                            blood_group: 'O-',\n                          }).length}\n                      </strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className='card-footer text-muted'>Today</div>\n              </div>\n            </div>\n\n            <div className='col-lg-3 col-md-6 col-sm-6 col-12'>\n              <div className='card text-center'>\n                <div className='card-header'>Whole Blood</div>\n                <div className='card-body '>\n                  <ul className='list-group list-group-flush'>\n                    <li className='list-group-item'>\n                      <strong>A + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Whole Blood',\n                            blood_group: 'A+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Whole Blood',\n                            blood_group: 'B+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Whole Blood',\n                            blood_group: 'AB+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O + </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Whole Blood',\n                            blood_group: 'O+',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>A - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Whole Blood',\n                            blood_group: 'A-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>B - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Whole Blood',\n                            blood_group: 'B-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>AB - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Whole Blood',\n                            blood_group: 'AB-',\n                          }).length}\n                      </strong>\n                    </li>\n                    <li className='list-group-item'>\n                      <strong>O - </strong>{' '}\n                      <i className='fas fa-arrow-right'></i>{' '}\n                      <strong>\n                        {bloodStores &&\n                          filteredBloodStore({\n                            blood_component: 'Whole Blood',\n                            blood_group: 'O-',\n                          }).length}\n                      </strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className='card-footer text-muted'>Today</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {}\n    </>\n  )\n}\n\nexport default ReportScreen\n","import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('')\n\n  const dispatch = useDispatch()\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, success } = userRegister\n\n  useEffect(() => {\n    if (success) {\n      setName('')\n      setEmail('')\n      setPassword('')\n      setConfirmPassword('')\n    }\n  }, [success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Password do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {success && (\n        <Message variant='success'>User has registered successfully</Message>\n      )}\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader></Loader>}\n      <form onSubmit={submitHandler}>\n        <div className='form-group'>\n          <label htmlFor='name'>Name</label>\n          <input\n            type='text'\n            placeholder='Enter name'\n            className='form-control'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Address</label>\n          <input\n            type='email'\n            placeholder='Enter email'\n            className='form-control'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            placeholder='Enter password'\n            className='form-control'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='confirmPassword'>Confirm Password</label>\n          <input\n            type='password'\n            placeholder='Confirm password'\n            className='form-control'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Sign Up\n        </button>\n      </form>\n\n      <div className='row py-3'>\n        <div className='col'>\n          Have an Account?\n          <Link to='/login'> Login</Link>\n        </div>\n      </div>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport HomeScreen from '../../screens/HomeScreen'\nimport LoginScreen from '../../screens/LoginScreen'\nimport ProfileScreen from '../../screens/ProfileScreen'\nimport UserListScreen from '../../screens/UserListScreen'\nimport BloodStoreScreen from '../../screens/BloodStoreScreen'\nimport BloodRequestScreen from '../../screens/BloodRequestScreen'\nimport NotFound from '../NotFound'\nimport UserLogHistoryScreen from '../../screens/LogHistoryScreen'\n\nimport PrivateRoute from '../routes/PrivateRoute'\nimport AdminPrivateRoute from '../routes/AdminPrivateRoute'\nimport BloodIssueScreen from '../../screens/BloodIssueScreen'\nimport CommentScreen from '../../screens/CommentScreen'\nimport ReportScreen from '../../screens/ReportScreen'\nimport RegisterScreen from \"../../screens/RegisterScreen\"\n\nconst Routes = () => {\n  return (\n    <section className='container'>\n      <Switch>\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n\n        <PrivateRoute path='/admin/report' component={ReportScreen} />\n        <PrivateRoute\n          path='/admin/users/logs'\n          component={UserLogHistoryScreen}\n        />\n        <PrivateRoute path='/comment' component={CommentScreen} />\n        <PrivateRoute path='/profile' component={ProfileScreen} />\n        <PrivateRoute path='/blood-issue/:id' component={BloodIssueScreen} />\n        <PrivateRoute exact path='/blood-store' component={BloodStoreScreen} />\n        <PrivateRoute\n          path='/blood-store/page/:pageNumber'\n          component={BloodStoreScreen}\n        />\n        <PrivateRoute\n          exact\n          path='/blood-request'\n          component={BloodRequestScreen}\n        />\n        <PrivateRoute\n          path='/blood-request/page/:pageNumber'\n          component={BloodRequestScreen}\n        />\n        <AdminPrivateRoute\n          exact\n          path='/admin/users'\n          component={UserListScreen}\n        />\n        <AdminPrivateRoute\n          path='/admin/users/page/:pageNumber'\n          component={UserListScreen}\n        />\n\n        <Route exact path='/' component={HomeScreen} />\n        <Route component={NotFound} />\n      </Switch>\n    </section>\n  )\n}\n\nexport default Routes\n","import { useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport Routes from './components/routes/Routes'\n\nimport { USER_LOGOUT } from './constants/userConstants'\nimport store from './store'\n\nconst App = () => {\n  useEffect(() => {\n    // log user out from all tabs if they log out in one tab\n    window.addEventListener('storage', () => {\n      if (!localStorage.userInfo) store.dispatch({ type: USER_LOGOUT })\n    })\n  }, [])\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <div className='container'>\n          <Route component={Routes} />\n        </div>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './bootstrap.min.css'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}